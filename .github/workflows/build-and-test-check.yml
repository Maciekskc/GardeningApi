name: CI

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Initialize sonar analyzer
        run: dotnet sonarscanner begin /k:"Maciekskc_GardeningApi" /d:sonar.token=${{ secrets.SONAR_TOKEN }} /d:sonar.cs.dotcover.reportsPaths=./GardeningApi/testResults/**/coverage.cobertura.xml

      - name: Install dependencies
        run: dotnet restore ./GardeningApi/GardeningApi.sln

      - name: Build
        run: dotnet build --configuration Release ./GardeningApi/GardeningApi.sln

      - name: Test with the dotnet CLI
        run: dotnet test --no-build --configuration Release --collect "XPlat Code Coverage;Format=cobertura%2copencover"' --results-directory "./GardeningApi/testResults" ./GardeningApi/GardeningApi.sln

      - name: Send Analysis report
        run: dotnet sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}

      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@v3.0.0
      #   with:
      #     projectBaseDir: ./GardeningApi/
      #     args: >
      #       -Dsonar.organization=maciekskc
      #       -Dsonar.projectKey=Maciekskc_GardeningApi
      #       -Dsonar.python.coverage.reportPaths=testResults/**/coverage.cobertura.xml
      #       -Dsonar.sources=.
      #       -Dsonar.verbose=true
      #       -Dsonar.scm.exclusions.disabled=true
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

          
